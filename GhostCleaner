#!/bin/bash

#Colors
    lightcyan='\e[96m'
    red='\e[1;31m'
    yellow='\e[1;33m'
    blue='\e[1;34m'
    tp='\e[0m'
    green='\e[0;32m'
    blink='\e[5m'
# help
if [[ $1 =~ ^(-h|--help) ]] ; then
    clear
    figlet -c GhostCleaner | lolcat
        echo -e "                       Made by           ":" $red ByChan$tp"
        echo -e "1.Seçenek kullanılan sistemin içinde bulunan /var/log dizinlerinin içerisindeki log tutan\n uygulamaların ve scriptlerin loglarını temizler." | lolcat
        echo -e "2.Seçenek kullanılan sistemdeki terminal üzerinde yazılmış olan komutları\n ve yapılan işlemlerin loglarını tutan historyleri temizler."| lolcat
        echo -e "3.Seçenek kullanılan sistemdeki işletim sistemi türünü aynı zamanda\n sudo yetkilerini ve idlerini öğrenmenize yarar." | lolcat 
    exit 0
fi

#Spinner
spinlong ()
{
    bar="---------------------------"
    barlength=${#bar}
    i=0
    while ((i < 100)); do
        n=$((i*barlength / 100))
        printf "\e[00;32m\r[%-${barlength}s]\e[00m" "${bar:0:n}"
        ((i += RANDOM%5+2))
        sleep 0.02
    done
    echo -e "[${green}OK${tp}]"
}

function pressanykey {
    read -n 1 -r -s -p $'Press any key to continue...\n'
}


#CTRL+C Trap
trap ctrl_c INT
ctrl_c() {
echo -e "\n"
echo -e "[${blink}${yellow}*${tp}]$blue GhostCleaner 😉 $tp"
exit 0
}

function checkinternet {
  ping -c 1 google.com &> /dev/null
  if [[ "$?" != 0 ]]
  then
    echo -e "Internet Kontrol Ediliyor: ${red}${blink}INTERNET BAGLANTISI SAĞLANAMADI$tp"
    echo -e "${red}GhostCleaner'dan Çıkış Yapılıyor$tp"
    exit 1
  else
    echo -e "${green}Interet Kontrol Ediliyor: BAGLANDI$tp"
    sleep 0.7
  fi
}
clear
checkinternet
#Lolcat
checklolcat=$(which lolcat)
if [[ $checklolcat = "" ]] ; then
    echo -e "${blue}Lolcat Indiriliyor$tp"
    sudo apt install lolcat -y &> /dev/null
    sudo pacman -S lolcat -y &> /dev/null
    spinlong
fi
#Figlet
checkfiglet=$(which figlet)
if [[ $checkfiglet = "" ]] ; then
    echo -e "${blue}Figlet Indiriliyor$tp"
    sudo apt install figlet -y &> /dev/null
    sudo pacman -S figlet -y &> /dev/null
    spinlong
fi
clear


LOGS_FILES=(
        /var/log/messages 
        /var/log/auth.log 
        /var/log/kern.log 
        /var/log/cron.log 
        /var/log/maillog 
        /var/log/boot.log 
        /var/log/mysqld.log 
        /var/log/mysql.log
        /var/log/qmail 
        /var/log/httpd 
        /var/log/lighttpd 
        /var/log/secure 
        /var/log/utmp 
        /var/log/btmp 
        /var/log/httpd 
        /var/log/apache 
        /var/log/xferlog
        /var/log/spooler
        /var/log/pureftp.log
        /var/log/lastlog
        /var/log/daemon.log
        /var/log/dmesg
        /var/log/apt
        /var/log/cups
        /var/log/vnetlib
        /var/log/nginx
        /var/log/syslog
        /var/log/wtmp 
        /var/log/yum.log
        /var/log/pacman.log
        /var/log/user.log 
        /var/log/postgresql
        /var/log/samba
        /var/log/apache2
        /var/log/system.log 
        /var/log/DiagnosticMessages 
        /Library/Logs 
        /Library/Logs/DiagnosticReports 
        ~/Library/Logs 
        ~/Library/Logs/DiagnosticReports 
)

function clearLogs () {
        for i in "${LOGS_FILES[@]}"
        do
                if [ -f "$i" ]; then
                        if [ -w "$i" ]; then
                                echo "" > "$i"
                                echo -e "${green}[+] $i Temizlendi.$tp" | lolcat
                        else
                                echo -e "${red}[!] $i Sudo yetkisiyle giriş yapıp tekrar dene.$tp" | lolcat
                        fi
                elif [ -d "$i" ]; then
                        if [ -w "$i" ]; then
                                rm -rf "${i:?}"/*
                                echo -e "${green}[+] $i Temizlendi.$tp" | lolcat
                        else
                                echo -e "${red}[!] $i Sudo yetkisiyle giriş yapıp tekrar dene.$tp" | lolcat
                        fi
                fi
        done
}

function clearHistory () {
        if [ -f ~/.zsh_history ]; then
                rm -rf /home/*/.zsh_history
                rm -rf /root/.bash_history
                echo "" > ~/.zsh_history
                echo -e "${green}[+] ~/.zsh_history Temizlendi.$tp"
        fi
        rm -rf /root/.bash_history
        rm -rf /home/*/.bash_history
        echo "" > ~/.bash_history
        echo -e "${green}[+] ~/.bash_history Temizlendi.$tp" | lolcat

        local HISTSIZE=0
        echo "Tabi Efendim ;)" &> /dev/null
        local HISTSIZE=5000
        history -c
        echo -e "${green}[+] History dosyası silindi.$tp" | lolcat
}

while :
do
clear
cat banner | lolcat
echo ""
uname -a | lolcat 
echo ""
    echo -e "${green}[1] Logları Temizle$tp" | lolcat
    echo -e "${green}[2] History Temizle$tp" | lolcat
    echo -e "${green}[3] Linux Sürüm Kontrol$tp" | lolcat
    echo -e "${green}[x] Çıkış$tp" | lolcat
    echo -ne "❨${blue}GhostCleaner@CYROPS${tp}❩\n↳[${blink}${lightcyan}*${tp}]➢ " ; read option
    case "$option" in
        1)
        clear
        clearLogs
        pressanykey
        ;;
        2)
        clear
        clearHistory
        pressanykey
        ;;
        3)
        clear
        figlet -c Surum Kontrol | lolcat
        cat /etc/os-release | lolcat  
        echo -e "${green}---------------------------------------------$tp"
        lsb_release -a | lolcat
        echo -e "${green}---------------------------------------------$tp"
        hostnamectl | lolcat
        echo -e "${green}---------------------------------------------$tp"
        uname -r | lolcat
        echo -e "${green}---------------------------------------------$tp"
        id | lolcat
        echo -e "${green}---------------------------------------------$tp"
        sudo -l | lolcat
        echo -e "${green}---------------------------------------------$tp"
        pressanykey
        ;;
        x)
        clear
        cat banner | lolcat
        echo ""
        exit 0
        ;;
    esac

done